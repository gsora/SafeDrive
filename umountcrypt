#!/bin/bash

# Copyright (c) 2014, Gianguido SorÃ 
# 
# All rights reserved.
# 
# Redistribution and use in source and binary forms, with or without modification,
# are permitted provided that the following conditions are met:
# 
#     * Redistributions of source code must retain the above copyright notice,
#       this list of conditions and the following disclaimer.
#     * Redistributions in binary form must reproduce the above copyright notice,
#       this list of conditions and the following disclaimer in the documentation
#       and/or other materials provided with the distribution.
#     * Neither the name of SafeDrive nor the names of its contributors
#       may be used to endorse or promote products derived from this software
#       without specific prior written permission.
# 
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR
# CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
# EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
# PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
# LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
# NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

ARGC=$#
ARG1=$1
ARG2=$2

usage() {
	echo "umountcrypt: unmount LUKS virtual drive with ease."
	echo -e "usage:\n\tumountcrypt YOURDRIVE MOUNTPOINT\n"
}

checkRoot() {
	if [[ $UID != 0 ]]; then
		echo "Please run this script as root."
		exit 9
	fi
}


errorMessages() {
	if [[ $ARG1 == "-h" || $ARG1 == "help" ]]; then
		usage
		exit 1
	fi

	if (( $ARGC > 2 )); then
		echo "Too many arguments."
		usage
		exit 1
	fi
	
	if (( $ARGC == 0 )); then
		echo "The following drives can be unmounted"
		for i in $(ls /dev/mapper); do
			if [[ $i == 'control' ]]; then
				true
			else
				echo -e "\t- $i"
			fi

		done
		exit 1
	fi
}

main() {
	checkRoot
	errorMessages

	CLS=$ARG1
	MNT=$ARG2
	
	echo $SRCSRC $DST

	cryptsetup luksClose $CLS
	sleep 5
	umount $MNT
}

main
